// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               String    @id @default(uuid()) @db.Uuid
  email            String    @unique
  raw_user_meta_data Json    @unique
  products         Product[] @relation("ProductOwner")
  chats            Chat[]    @relation("UserChats")
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")

  @@map("user")
}

model Product {
  id       String @id @default(uuid()) @db.Uuid
  title    String
  ownerId  String @db.Uuid
  owner    User   @relation(name: "ProductOwner", fields: [ownerId], references: [id])
  category String
  price    String
  description String
  images   Json?
  Chat     Chat[] 

  @@map("product")
}

model Chat {
  id        String    @id @default(uuid()) @db.Uuid
  userId    String    @db.Uuid
  user      User      @relation(name: "UserChats", fields: [userId], references: [id])
  productId String    @db.Uuid
  product   Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  messages  Message[] 

  @@map("chat")
}

model Message {
  id         String   @id @default(uuid()) @db.Uuid
  text       String
  chatId     String   @db.Uuid
  chat       Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  senderId   String   @db.Uuid
  sender     User     @relation(name: "SentMessages", fields: [senderId], references: [id])
  receiverId String   @db.Uuid
  receiver   User     @relation(name: "ReceivedMessages", fields: [receiverId], references: [id])
  createdAt  DateTime @default(now())

  @@map("message")
}

